# Generated by Django 4.1.7 on 2023-03-16 19:13

from django.db import migrations, models

import usuarios.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='endereço de email')),
                ('primeiro_nome', models.CharField(blank=True, max_length=150, verbose_name='primeiro nome')),
                ('ultimo_nome', models.CharField(blank=True, max_length=150, verbose_name='último nome')),
                ('data_criacao', models.DateTimeField(auto_now_add=True, verbose_name='data de criação')),
                ('is_active', models.BooleanField(default=True, verbose_name='ativo')),
                ('is_admin', models.BooleanField(default=False, help_text='Especifica se o usuário pode logar no site admin', verbose_name='admin status')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'usuário',
                'verbose_name_plural': 'usuários',
            },
            managers=[
                ('objects', usuarios.managers.UserManager()),
            ],
        ),
    ]
